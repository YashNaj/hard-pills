-- Current sql file was generated after introspecting the database
-- If you want to run this migration please uncomment this code before executing migrations
/*
CREATE TYPE "public"."post_status" AS ENUM('draft', 'scheduled', 'published', 'archived');--> statement-breakpoint
CREATE TABLE "notifications" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"user_id" uuid,
	"title" text NOT NULL,
	"content" text NOT NULL,
	"read" boolean DEFAULT false
);
--> statement-breakpoint
ALTER TABLE "notifications" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "post_images" (
	"id" uuid PRIMARY KEY DEFAULT uuid_generate_v4() NOT NULL,
	"post_id" uuid NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"original_filename" text NOT NULL,
	"alt_text" text,
	"display_order" integer DEFAULT 0,
	"mime_type" text DEFAULT 'image/webp' NOT NULL,
	"original_path" text NOT NULL,
	"original_width" integer NOT NULL,
	"original_height" integer NOT NULL,
	"original_size" integer NOT NULL,
	"large_path" text,
	"large_width" integer,
	"large_height" integer,
	"large_size" integer,
	"medium_path" text,
	"medium_width" integer,
	"medium_height" integer,
	"medium_size" integer,
	"thumbnail_path" text,
	"thumbnail_width" integer,
	"thumbnail_height" integer,
	"thumbnail_size" integer,
	"blur_path" text,
	"blur_width" integer,
	"blur_height" integer,
	"blur_size" integer,
	"last_modified" timestamp with time zone DEFAULT now(),
	"pagination_cursor" serial NOT NULL
);
--> statement-breakpoint
ALTER TABLE "post_images" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "posts" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"title" text NOT NULL,
	"content" text NOT NULL,
	"slug" text NOT NULL,
	"published" boolean DEFAULT false NOT NULL,
	"author" uuid NOT NULL,
	"updated_at" timestamp with time zone,
	"submission_id" uuid,
	"scheduled_at" timestamp with time zone,
	"status" "post_status" DEFAULT 'draft' NOT NULL,
	"header_image_id" uuid,
	"featured" boolean DEFAULT false,
	CONSTRAINT "posts_slug_key" UNIQUE("slug")
);
--> statement-breakpoint
ALTER TABLE "posts" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "submissions" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"name" text,
	"email" text,
	"subject" text,
	"content" text NOT NULL,
	"ip_address" text,
	"status" text DEFAULT 'pending'
);
--> statement-breakpoint
ALTER TABLE "submissions" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "mailing_list" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailing_list_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"email" text DEFAULT ''
);
--> statement-breakpoint
ALTER TABLE "mailing_list" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
ALTER TABLE "notifications" ADD CONSTRAINT "notifications_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "post_images" ADD CONSTRAINT "fk_post" FOREIGN KEY ("post_id") REFERENCES "public"."posts"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "post_images" ADD CONSTRAINT "post_images_post_id_fkey" FOREIGN KEY ("post_id") REFERENCES "public"."posts"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "posts" ADD CONSTRAINT "posts_author_fkey" FOREIGN KEY ("author") REFERENCES "auth"."users"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "posts" ADD CONSTRAINT "posts_header_image_id_fkey" FOREIGN KEY ("header_image_id") REFERENCES "public"."post_images"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "posts" ADD CONSTRAINT "posts_submission_id_fkey" FOREIGN KEY ("submission_id") REFERENCES "public"."submissions"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "idx_post_images_post_id" ON "post_images" USING btree ("post_id" uuid_ops);--> statement-breakpoint
CREATE POLICY "Admins can manage all notifications" ON "notifications" AS PERMISSIVE FOR ALL TO public USING (is_admin());--> statement-breakpoint
CREATE POLICY "Users can view their own notifications" ON "notifications" AS PERMISSIVE FOR SELECT TO public;--> statement-breakpoint
CREATE POLICY "Allow anyone to view post_images" ON "post_images" AS PERMISSIVE FOR SELECT TO "anon", "authenticated" USING (true);--> statement-breakpoint
CREATE POLICY "Allow specific users to manage post_images" ON "post_images" AS PERMISSIVE FOR ALL TO "authenticated";--> statement-breakpoint
CREATE POLICY "Admins can do everything with posts" ON "posts" AS PERMISSIVE FOR ALL TO public USING (is_admin());--> statement-breakpoint
CREATE POLICY "Anyone can view published posts" ON "posts" AS PERMISSIVE FOR SELECT TO public;--> statement-breakpoint
CREATE POLICY "Admins can manage submissions" ON "submissions" AS PERMISSIVE FOR ALL TO public USING (is_admin());--> statement-breakpoint
CREATE POLICY "Anyone can create submissions with rate limit" ON "submissions" AS PERMISSIVE FOR INSERT TO public;--> statement-breakpoint
CREATE POLICY "Admins can manage mailing list" ON "mailing_list" AS PERMISSIVE FOR ALL TO public USING (is_admin());--> statement-breakpoint
CREATE POLICY "Anyone can subscribe to mailing list" ON "mailing_list" AS PERMISSIVE FOR INSERT TO public;
*/